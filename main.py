from datetime import datetime
from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import ApplicationBuilder, CommandHandler, MessageHandler, ContextTypes, filters

# ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
user_data = {}

# ‡πÄ‡∏°‡∏ô‡∏π‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [
        ["üü¢ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô", "üî¥ ‡πÄ‡∏•‡∏¥‡∏Å‡∏á‡∏≤‡∏ô"],
        ["üöª ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥", "üîô ‡∏Å‡∏•‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á"],
        ["üìã ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥"]
    ]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text("üëã ‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö! ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π:", reply_markup=reply_markup)

# ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏´‡∏•‡∏±‡∏Å‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    user_id = user.id
    text = update.message.text
    now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    if user_id not in user_data:
        user_data[user_id] = {
            "start_time": None,
            "bathroom_time": None,
            "bathroom_msg_id": None,
            "last_action": None
        }

    data = user_data[user_id]

    if text != "üü¢ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô" and data["start_time"] is None:
        await update.message.reply_text("‚ö†Ô∏è ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏î '‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô' ‡∏Å‡πà‡∏≠‡∏ô‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏°‡∏ô‡∏π‡∏≠‡∏∑‡πà‡∏ô", reply_to_message_id=update.message.message_id)
        return

    if text == "üü¢ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô":
        if data["last_action"] == "üü¢ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô":
            await update.message.reply_text("‚ùó ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ", reply_to_message_id=update.message.message_id)
            return
        if data["start_time"] is not None:
            await update.message.reply_text("‚ùó ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ", reply_to_message_id=update.message.message_id)
            return
        if data["bathroom_time"] is not None:
            await update.message.reply_text("‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥", reply_to_message_id=data["bathroom_msg_id"])
            return

        data["start_time"] = datetime.now()
        data["bathroom_time"] = None
        data["bathroom_msg_id"] = None
        data["last_action"] = "üü¢ ‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô"

        await update.message.reply_text(f"‚úÖ ‡∏Ñ‡∏∏‡∏ì {user.first_name} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß {now}", reply_to_message_id=update.message.message_id)

    elif text == "üî¥ ‡πÄ‡∏•‡∏¥‡∏Å‡∏á‡∏≤‡∏ô":
        if data["last_action"] == "üî¥ ‡πÄ‡∏•‡∏¥‡∏Å‡∏á‡∏≤‡∏ô":
            await update.message.reply_text("‚ùó ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏•‡∏¥‡∏Å‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ", reply_to_message_id=update.message.message_id)
            return
        if data["start_time"] is None:
            await update.message.reply_text("‚ùó ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏á‡∏≤‡∏ô", reply_to_message_id=update.message.message_id)
            return
        if data["bathroom_time"] is not None:
            await update.message.reply_text("‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥", reply_to_message_id=data["bathroom_msg_id"])
            return

        end_time = datetime.now()
        total_duration = end_time - data["start_time"]

        if data["bathroom_time"]:
            bathroom_duration = end_time - data["bathroom_time"]
            total_duration -= bathroom_duration

        await update.message.reply_text(
            f"üìã ‡∏Ñ‡∏∏‡∏ì {user.first_name} ‡πÄ‡∏•‡∏¥‡∏Å‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß\n‡∏£‡∏ß‡∏°‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏≥‡∏á‡∏≤‡∏ô: {str(total_duration).split('.')[0]}",
            reply_to_message_id=update.message.message_id
        )

        data["start_time"] = None
        data["bathroom_time"] = None
        data["bathroom_msg_id"] = None
        data["last_action"] = "üî¥ ‡πÄ‡∏•‡∏¥‡∏Å‡∏á‡∏≤‡∏ô"

    elif text == "üöª ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥":
        if data["last_action"] == "üöª ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥":
            await update.message.reply_text("‚ùó ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ", reply_to_message_id=update.message.message_id)
            return
        if data["bathroom_time"] is not None:
            await update.message.reply_text("‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥", reply_to_message_id=data["bathroom_msg_id"])
            return

        data["bathroom_time"] = datetime.now()
        sent = await update.message.reply_text(f"üöª ‡∏Ñ‡∏∏‡∏ì {user.first_name} ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥ {now}", reply_to_message_id=update.message.message_id)
        data["bathroom_msg_id"] = sent.message_id
        data["last_action"] = "üöª ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥"

    elif text == "üîô ‡∏Å‡∏•‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á":
        if data["last_action"] == "üîô ‡∏Å‡∏•‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á":
            await update.message.reply_text("‚ùó ‡∏Ñ‡∏∏‡∏ì‡∏Å‡∏•‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á‡πÅ‡∏•‡πâ‡∏ß ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ", reply_to_message_id=update.message.message_id)
            return
        if data["bathroom_time"] is None:
            await update.message.reply_text("‚ùå ‡∏Ñ‡∏∏‡∏ì‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥", reply_to_message_id=update.message.message_id)
            return

        back_time = datetime.now()
        bathroom_duration = back_time - data["bathroom_time"]
        await update.message.reply_text(
            f"üîô ‡∏Ñ‡∏∏‡∏ì {user.first_name} ‡∏Å‡∏•‡∏±‡∏ö‡∏à‡∏≤‡∏Å‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥ ‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤: {str(bathroom_duration).split('.')[0]}",
            reply_to_message_id=data["bathroom_msg_id"]
        )

        data["bathroom_time"] = None
        data["bathroom_msg_id"] = None
        data["last_action"] = "üîô ‡∏Å‡∏•‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏ô‡∏±‡πà‡∏á"

    elif text == "üìã ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥":
        if data["last_action"] == "üìã ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥":
            await update.message.reply_text("‚ùó ‡∏Ñ‡∏∏‡∏ì‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÑ‡∏õ ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Å‡∏î‡∏ã‡πâ‡∏≥‡πÑ‡∏î‡πâ", reply_to_message_id=update.message.message_id)
            return
        await update.message.reply_text("üìã ‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô")
        data["last_action"] = "üìã ‡∏î‡∏π‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥"

    else:
        await update.message.reply_text("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏°‡∏ô‡∏π‡∏à‡∏≤‡∏Å‡∏õ‡∏∏‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á")

# ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ö‡∏≠‡∏ó
if __name__ == "__main__":
    app = ApplicationBuilder().token("7796994967:AAFrF9Dl9eFn8EtHnbKGpXjkt2XJXBuCo6M").build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    print("ü§ñ Bot is running...")
    app.run_polling()
